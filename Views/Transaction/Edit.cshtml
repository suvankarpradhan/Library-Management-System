@model Library_Management_System.Models.TransactionRecord

@{
    ViewBag.Title = "Edit";
}

<h2>SUV LIBRARY</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Update this Transaction Record</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.trans_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.trans_id, new { htmlAttributes = new { @class = "form-control", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.trans_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emp_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emp_id, new { htmlAttributes = new { @class = "form-control", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.emp_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.book_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.book_id, new { htmlAttributes = new { @class = "form-control", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.book_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mem_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mem_id, new { htmlAttributes = new { @class = "form-control", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.mem_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.issue_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.issue_date, new { htmlAttributes = new { @class = "form-control", Type = "text", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.issue_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.return_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.return_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.return_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.last_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.last_date, new { htmlAttributes = new { @class = "form-control", Type = "text", ReadOnly = "true" } })
                @Html.ValidationMessageFor(model => model.last_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.penalty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.penalty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.penalty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" onmousedown="getEmpInfo()">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Caculate penalty" class="btn btn-info" onclick="penaltyCalculate()" />
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index")
</div>
